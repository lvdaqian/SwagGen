//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import JSONUtilities

public class ProfileTokenRequest: JSONDecodable, JSONEncodable, PrettyPrintable {

    /** The scope(s) of the token(s) required. */
    public enum Scopes: String {
        case catalog = "Catalog"
        case commerce = "Commerce"
        case settings = "Settings"

        public static let cases: [Scopes] = [
          .catalog,
          .commerce,
          .settings,
        ]
    }

    /** The id of the profile the token should grant access rights to. */
    public var profileId: String

    /** The scope(s) of the token(s) required. */
    public var scopes: [Scopes]

    /** The pin associated with this profile, if any. */
    public var pin: String?

    public init(profileId: String, scopes: [Scopes], pin: String? = nil) {
        self.profileId = profileId
        self.scopes = scopes
        self.pin = pin
    }

    public required init(jsonDictionary: JSONDictionary) throws {
        profileId = try jsonDictionary.json(atKeyPath: "profileId")
        scopes = try jsonDictionary.json(atKeyPath: "scopes")
        pin = jsonDictionary.json(atKeyPath: "pin")
    }

    public func encode() -> JSONDictionary {
        var dictionary: JSONDictionary = [:]
        dictionary["profileId"] = profileId
        dictionary["scopes"] = scopes.encode()
        if let pin = pin {
            dictionary["pin"] = pin
        }
        return dictionary
    }

    /// pretty prints all properties including nested models
    public var prettyPrinted: String {
        return "\(type(of: self)):\n\(encode().recursivePrint(indentIndex: 1))"
    }
}

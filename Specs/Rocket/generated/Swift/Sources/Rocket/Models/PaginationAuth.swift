//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import JSONUtilities

public class PaginationAuth: JSONDecodable, JSONEncodable, PrettyPrintable {

    /** The token type required to load the list. */
    public enum `Type`: String {
        case userAccount = "UserAccount"
        case userProfile = "UserProfile"

        public static let cases: [`Type`] = [
          .userAccount,
          .userProfile,
        ]
    }

    /** The token scope required. */
    public enum Scope: String {
        case catalog = "Catalog"
        case commerce = "Commerce"
        case settings = "Settings"

        public static let cases: [Scope] = [
          .catalog,
          .commerce,
          .settings,
        ]
    }

    /** The token type required to load the list. */
    public var type: `Type`

    /** The token scope required. */
    public var scope: Scope

    public init(type: `Type`, scope: Scope) {
        self.type = type
        self.scope = scope
    }

    public required init(jsonDictionary: JSONDictionary) throws {
        type = try jsonDictionary.json(atKeyPath: "type")
        scope = try jsonDictionary.json(atKeyPath: "scope")
    }

    public func encode() -> JSONDictionary {
        var dictionary: JSONDictionary = [:]
        dictionary["type"] = type.encode()
        dictionary["scope"] = scope.encode()
        return dictionary
    }

    /// pretty prints all properties including nested models
    public var prettyPrinted: String {
        return "\(type(of: self)):\n\(encode().recursivePrint(indentIndex: 1))"
    }
}

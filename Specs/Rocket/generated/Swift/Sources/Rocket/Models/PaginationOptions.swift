//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import JSONUtilities

public class PaginationOptions: JSONDecodable, JSONEncodable, PrettyPrintable {

    /** Specific item type filter. */
    public var itemType: ItemType?

    /** The maximum rating (inclusive) of items returned, e.g. 'AUOFLC-PG'. */
    public var maxRating: String?

    /** The applied sort order if any. */
    public var order: ListOrder?

    /** The applied sort ordering property if any. */
    public var orderBy: ListOrderBy?

    /** The number of items to return in a list page. */
    public var pageSize: Int?

    public init(itemType: ItemType? = nil, maxRating: String? = nil, order: ListOrder? = nil, orderBy: ListOrderBy? = nil, pageSize: Int? = nil) {
        self.itemType = itemType
        self.maxRating = maxRating
        self.order = order
        self.orderBy = orderBy
        self.pageSize = pageSize
    }

    public required init(jsonDictionary: JSONDictionary) throws {
        itemType = jsonDictionary.json(atKeyPath: "itemType")
        maxRating = jsonDictionary.json(atKeyPath: "maxRating")
        order = jsonDictionary.json(atKeyPath: "order")
        orderBy = jsonDictionary.json(atKeyPath: "orderBy")
        pageSize = jsonDictionary.json(atKeyPath: "pageSize")
    }

    public func encode() -> JSONDictionary {
        var dictionary: JSONDictionary = [:]
        if let itemType = itemType?.encode() {
            dictionary["itemType"] = itemType
        }
        if let maxRating = maxRating {
            dictionary["maxRating"] = maxRating
        }
        if let order = order?.encode() {
            dictionary["order"] = order
        }
        if let orderBy = orderBy?.encode() {
            dictionary["orderBy"] = orderBy
        }
        if let pageSize = pageSize {
            dictionary["pageSize"] = pageSize
        }
        return dictionary
    }

    /// pretty prints all properties including nested models
    public var prettyPrinted: String {
        return "\(type(of: self)):\n\(encode().recursivePrint(indentIndex: 1))"
    }
}

//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import JSONUtilities

public class Classification: ClassificationSummary {

    /** The level of this classification when compared with its siblings.
A higher level means a greater restriction.
Each classification in a system should have a unique level.
 */
    public var level: Int

    /** The parent system code of the classification. */
    public var system: String

    public var images: [String: URL]

    /** Parental advisort text. */
    public var advisoryText: String?

    public init(code: String, name: String, level: Int, system: String, images: [String: URL], advisoryText: String? = nil) {
        self.level = level
        self.system = system
        self.images = images
        self.advisoryText = advisoryText
        super.init(code: code, name: name)
    }

    public required init(jsonDictionary: JSONDictionary) throws {
        level = try jsonDictionary.json(atKeyPath: "level")
        system = try jsonDictionary.json(atKeyPath: "system")
        images = try jsonDictionary.json(atKeyPath: "images")
        advisoryText = jsonDictionary.json(atKeyPath: "advisoryText")
        try super.init(jsonDictionary: jsonDictionary)
    }

    public override func encode() -> JSONDictionary {
        var dictionary: JSONDictionary = [:]
        dictionary["level"] = level
        dictionary["system"] = system
        dictionary["images"] = images.encode()
        if let advisoryText = advisoryText {
            dictionary["advisoryText"] = advisoryText
        }
        let superDictionary = super.encode()
        for (key, value) in superDictionary {
            dictionary[key] = value
        }
        return dictionary
    }
}

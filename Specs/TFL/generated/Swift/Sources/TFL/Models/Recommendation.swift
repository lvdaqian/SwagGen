//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import JSONUtilities

public class Recommendation: JSONDecodable, JSONEncodable, PrettyPrintable {

    public var cost: String?

    public var discountCard: String?

    public var fareType: String?

    public var gettingYourTicket: [Message]?

    public var id: Int?

    public var keyFeatures: [Message]?

    public var notes: [Message]?

    public var priceComparison: String?

    public var priceDescription: String?

    public var product: String?

    public var productType: String?

    public var rank: Int?

    public var recommendedTopUp: String?

    public var rule: Int?

    public var singleFare: Double?

    public var ticketTime: String?

    public var ticketType: String?

    public var zones: String?

    public init(cost: String? = nil, discountCard: String? = nil, fareType: String? = nil, gettingYourTicket: [Message]? = nil, id: Int? = nil, keyFeatures: [Message]? = nil, notes: [Message]? = nil, priceComparison: String? = nil, priceDescription: String? = nil, product: String? = nil, productType: String? = nil, rank: Int? = nil, recommendedTopUp: String? = nil, rule: Int? = nil, singleFare: Double? = nil, ticketTime: String? = nil, ticketType: String? = nil, zones: String? = nil) {
        self.cost = cost
        self.discountCard = discountCard
        self.fareType = fareType
        self.gettingYourTicket = gettingYourTicket
        self.id = id
        self.keyFeatures = keyFeatures
        self.notes = notes
        self.priceComparison = priceComparison
        self.priceDescription = priceDescription
        self.product = product
        self.productType = productType
        self.rank = rank
        self.recommendedTopUp = recommendedTopUp
        self.rule = rule
        self.singleFare = singleFare
        self.ticketTime = ticketTime
        self.ticketType = ticketType
        self.zones = zones
    }

    public required init(jsonDictionary: JSONDictionary) throws {
        cost = jsonDictionary.json(atKeyPath: "cost")
        discountCard = jsonDictionary.json(atKeyPath: "discountCard")
        fareType = jsonDictionary.json(atKeyPath: "fareType")
        gettingYourTicket = jsonDictionary.json(atKeyPath: "gettingYourTicket")
        id = jsonDictionary.json(atKeyPath: "id")
        keyFeatures = jsonDictionary.json(atKeyPath: "keyFeatures")
        notes = jsonDictionary.json(atKeyPath: "notes")
        priceComparison = jsonDictionary.json(atKeyPath: "priceComparison")
        priceDescription = jsonDictionary.json(atKeyPath: "priceDescription")
        product = jsonDictionary.json(atKeyPath: "product")
        productType = jsonDictionary.json(atKeyPath: "productType")
        rank = jsonDictionary.json(atKeyPath: "rank")
        recommendedTopUp = jsonDictionary.json(atKeyPath: "recommendedTopUp")
        rule = jsonDictionary.json(atKeyPath: "rule")
        singleFare = jsonDictionary.json(atKeyPath: "singleFare")
        ticketTime = jsonDictionary.json(atKeyPath: "ticketTime")
        ticketType = jsonDictionary.json(atKeyPath: "ticketType")
        zones = jsonDictionary.json(atKeyPath: "zones")
    }

    public func encode() -> JSONDictionary {
        var dictionary: JSONDictionary = [:]
        if let cost = cost {
            dictionary["cost"] = cost
        }
        if let discountCard = discountCard {
            dictionary["discountCard"] = discountCard
        }
        if let fareType = fareType {
            dictionary["fareType"] = fareType
        }
        if let gettingYourTicket = gettingYourTicket?.encode() {
            dictionary["gettingYourTicket"] = gettingYourTicket
        }
        if let id = id {
            dictionary["id"] = id
        }
        if let keyFeatures = keyFeatures?.encode() {
            dictionary["keyFeatures"] = keyFeatures
        }
        if let notes = notes?.encode() {
            dictionary["notes"] = notes
        }
        if let priceComparison = priceComparison {
            dictionary["priceComparison"] = priceComparison
        }
        if let priceDescription = priceDescription {
            dictionary["priceDescription"] = priceDescription
        }
        if let product = product {
            dictionary["product"] = product
        }
        if let productType = productType {
            dictionary["productType"] = productType
        }
        if let rank = rank {
            dictionary["rank"] = rank
        }
        if let recommendedTopUp = recommendedTopUp {
            dictionary["recommendedTopUp"] = recommendedTopUp
        }
        if let rule = rule {
            dictionary["rule"] = rule
        }
        if let singleFare = singleFare {
            dictionary["singleFare"] = singleFare
        }
        if let ticketTime = ticketTime {
            dictionary["ticketTime"] = ticketTime
        }
        if let ticketType = ticketType {
            dictionary["ticketType"] = ticketType
        }
        if let zones = zones {
            dictionary["zones"] = zones
        }
        return dictionary
    }

    /// pretty prints all properties including nested models
    public var prettyPrinted: String {
        return "\(type(of: self)):\n\(encode().recursivePrint(indentIndex: 1))"
    }
}

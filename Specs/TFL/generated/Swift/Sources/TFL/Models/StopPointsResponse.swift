//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import JSONUtilities

/** A paged response containing StopPoints */
public class StopPointsResponse: JSONDecodable, JSONEncodable, PrettyPrintable {

    /** The centre latitude/longitude of this list of StopPoints */
    public var centrePoint: [Double]?

    /** The index of this page */
    public var page: Int?

    /** The maximum size of the page in this response i.e. the maximum number of StopPoints */
    public var pageSize: Int?

    /** Collection of stop points */
    public var stopPoints: [StopPoint]?

    /** The total number of StopPoints available across all pages */
    public var total: Int?

    public init(centrePoint: [Double]? = nil, page: Int? = nil, pageSize: Int? = nil, stopPoints: [StopPoint]? = nil, total: Int? = nil) {
        self.centrePoint = centrePoint
        self.page = page
        self.pageSize = pageSize
        self.stopPoints = stopPoints
        self.total = total
    }

    public required init(jsonDictionary: JSONDictionary) throws {
        centrePoint = jsonDictionary.json(atKeyPath: "centrePoint")
        page = jsonDictionary.json(atKeyPath: "page")
        pageSize = jsonDictionary.json(atKeyPath: "pageSize")
        stopPoints = jsonDictionary.json(atKeyPath: "stopPoints")
        total = jsonDictionary.json(atKeyPath: "total")
    }

    public func encode() -> JSONDictionary {
        var dictionary: JSONDictionary = [:]
        if let centrePoint = centrePoint {
            dictionary["centrePoint"] = centrePoint
        }
        if let page = page {
            dictionary["page"] = page
        }
        if let pageSize = pageSize {
            dictionary["pageSize"] = pageSize
        }
        if let stopPoints = stopPoints?.encode() {
            dictionary["stopPoints"] = stopPoints
        }
        if let total = total {
            dictionary["total"] = total
        }
        return dictionary
    }

    /// pretty prints all properties including nested models
    public var prettyPrinted: String {
        return "\(type(of: self)):\n\(encode().recursivePrint(indentIndex: 1))"
    }
}

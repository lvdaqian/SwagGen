//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import JSONUtilities

/** Represents a period for which a planned works is valid. */
public class ValidityPeriod: JSONDecodable, JSONEncodable, PrettyPrintable {

    /** Gets or sets the start date. */
    public var fromDate: Date?

    /** If true is a realtime status rather than planned or info */
    public var isNow: Bool?

    /** Gets or sets the end date. */
    public var toDate: Date?

    public init(fromDate: Date? = nil, isNow: Bool? = nil, toDate: Date? = nil) {
        self.fromDate = fromDate
        self.isNow = isNow
        self.toDate = toDate
    }

    public required init(jsonDictionary: JSONDictionary) throws {
        fromDate = jsonDictionary.json(atKeyPath: "fromDate")
        isNow = jsonDictionary.json(atKeyPath: "isNow")
        toDate = jsonDictionary.json(atKeyPath: "toDate")
    }

    public func encode() -> JSONDictionary {
        var dictionary: JSONDictionary = [:]
        if let fromDate = fromDate?.encode() {
            dictionary["fromDate"] = fromDate
        }
        if let isNow = isNow {
            dictionary["isNow"] = isNow
        }
        if let toDate = toDate?.encode() {
            dictionary["toDate"] = toDate
        }
        return dictionary
    }

    /// pretty prints all properties including nested models
    public var prettyPrinted: String {
        return "\(type(of: self)):\n\(encode().recursivePrint(indentIndex: 1))"
    }
}

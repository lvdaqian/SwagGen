//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import JSONUtilities

public class StopPointRouteSection: JSONDecodable, JSONEncodable, PrettyPrintable {

    public var destinationName: String?

    public var direction: String?

    public var isActive: Bool?

    public var lineId: String?

    public var lineString: String?

    public var mode: String?

    public var naptanId: String?

    public var routeSectionName: String?

    public var serviceType: String?

    public var validFrom: Date?

    public var validTo: Date?

    public var vehicleDestinationText: String?

    public init(destinationName: String? = nil, direction: String? = nil, isActive: Bool? = nil, lineId: String? = nil, lineString: String? = nil, mode: String? = nil, naptanId: String? = nil, routeSectionName: String? = nil, serviceType: String? = nil, validFrom: Date? = nil, validTo: Date? = nil, vehicleDestinationText: String? = nil) {
        self.destinationName = destinationName
        self.direction = direction
        self.isActive = isActive
        self.lineId = lineId
        self.lineString = lineString
        self.mode = mode
        self.naptanId = naptanId
        self.routeSectionName = routeSectionName
        self.serviceType = serviceType
        self.validFrom = validFrom
        self.validTo = validTo
        self.vehicleDestinationText = vehicleDestinationText
    }

    public required init(jsonDictionary: JSONDictionary) throws {
        destinationName = jsonDictionary.json(atKeyPath: "destinationName")
        direction = jsonDictionary.json(atKeyPath: "direction")
        isActive = jsonDictionary.json(atKeyPath: "isActive")
        lineId = jsonDictionary.json(atKeyPath: "lineId")
        lineString = jsonDictionary.json(atKeyPath: "lineString")
        mode = jsonDictionary.json(atKeyPath: "mode")
        naptanId = jsonDictionary.json(atKeyPath: "naptanId")
        routeSectionName = jsonDictionary.json(atKeyPath: "routeSectionName")
        serviceType = jsonDictionary.json(atKeyPath: "serviceType")
        validFrom = jsonDictionary.json(atKeyPath: "validFrom")
        validTo = jsonDictionary.json(atKeyPath: "validTo")
        vehicleDestinationText = jsonDictionary.json(atKeyPath: "vehicleDestinationText")
    }

    public func encode() -> JSONDictionary {
        var dictionary: JSONDictionary = [:]
        if let destinationName = destinationName {
            dictionary["destinationName"] = destinationName
        }
        if let direction = direction {
            dictionary["direction"] = direction
        }
        if let isActive = isActive {
            dictionary["isActive"] = isActive
        }
        if let lineId = lineId {
            dictionary["lineId"] = lineId
        }
        if let lineString = lineString {
            dictionary["lineString"] = lineString
        }
        if let mode = mode {
            dictionary["mode"] = mode
        }
        if let naptanId = naptanId {
            dictionary["naptanId"] = naptanId
        }
        if let routeSectionName = routeSectionName {
            dictionary["routeSectionName"] = routeSectionName
        }
        if let serviceType = serviceType {
            dictionary["serviceType"] = serviceType
        }
        if let validFrom = validFrom?.encode() {
            dictionary["validFrom"] = validFrom
        }
        if let validTo = validTo?.encode() {
            dictionary["validTo"] = validTo
        }
        if let vehicleDestinationText = vehicleDestinationText {
            dictionary["vehicleDestinationText"] = vehicleDestinationText
        }
        return dictionary
    }

    /// pretty prints all properties including nested models
    public var prettyPrinted: String {
        return "\(type(of: self)):\n\(encode().recursivePrint(indentIndex: 1))"
    }
}

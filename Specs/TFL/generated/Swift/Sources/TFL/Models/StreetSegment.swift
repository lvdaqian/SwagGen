//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import JSONUtilities

public class StreetSegment: JSONDecodable, JSONEncodable, PrettyPrintable {

    /** geoJSON formatted LineString containing two latitude/longitude (WGS84) pairs that identify the start and end points of the street segment. */
    public var lineString: String?

    /** The ID from the source system of the disruption that this street belongs to. */
    public var sourceSystemId: Int?

    /** The key of the source system of the disruption that this street belongs to. */
    public var sourceSystemKey: String?

    /** A 16 digit unique integer identifying a OS ITN (Ordnance Survey Integrated Transport Network) road link. */
    public var toid: String?

    public init(lineString: String? = nil, sourceSystemId: Int? = nil, sourceSystemKey: String? = nil, toid: String? = nil) {
        self.lineString = lineString
        self.sourceSystemId = sourceSystemId
        self.sourceSystemKey = sourceSystemKey
        self.toid = toid
    }

    public required init(jsonDictionary: JSONDictionary) throws {
        lineString = jsonDictionary.json(atKeyPath: "lineString")
        sourceSystemId = jsonDictionary.json(atKeyPath: "sourceSystemId")
        sourceSystemKey = jsonDictionary.json(atKeyPath: "sourceSystemKey")
        toid = jsonDictionary.json(atKeyPath: "toid")
    }

    public func encode() -> JSONDictionary {
        var dictionary: JSONDictionary = [:]
        if let lineString = lineString {
            dictionary["lineString"] = lineString
        }
        if let sourceSystemId = sourceSystemId {
            dictionary["sourceSystemId"] = sourceSystemId
        }
        if let sourceSystemKey = sourceSystemKey {
            dictionary["sourceSystemKey"] = sourceSystemKey
        }
        if let toid = toid {
            dictionary["toid"] = toid
        }
        return dictionary
    }

    /// pretty prints all properties including nested models
    public var prettyPrinted: String {
        return "\(type(of: self)):\n\(encode().recursivePrint(indentIndex: 1))"
    }
}

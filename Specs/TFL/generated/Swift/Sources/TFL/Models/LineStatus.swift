//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import JSONUtilities

public class LineStatus: JSONDecodable, JSONEncodable, PrettyPrintable {

    public var created: Date?

    public var disruption: Disruption?

    public var id: Int?

    public var lineId: String?

    public var modified: Date?

    public var reason: String?

    public var statusSeverity: Int?

    public var statusSeverityDescription: String?

    public var validityPeriods: [ValidityPeriod]?

    public init(created: Date? = nil, disruption: Disruption? = nil, id: Int? = nil, lineId: String? = nil, modified: Date? = nil, reason: String? = nil, statusSeverity: Int? = nil, statusSeverityDescription: String? = nil, validityPeriods: [ValidityPeriod]? = nil) {
        self.created = created
        self.disruption = disruption
        self.id = id
        self.lineId = lineId
        self.modified = modified
        self.reason = reason
        self.statusSeverity = statusSeverity
        self.statusSeverityDescription = statusSeverityDescription
        self.validityPeriods = validityPeriods
    }

    public required init(jsonDictionary: JSONDictionary) throws {
        created = jsonDictionary.json(atKeyPath: "created")
        disruption = jsonDictionary.json(atKeyPath: "disruption")
        id = jsonDictionary.json(atKeyPath: "id")
        lineId = jsonDictionary.json(atKeyPath: "lineId")
        modified = jsonDictionary.json(atKeyPath: "modified")
        reason = jsonDictionary.json(atKeyPath: "reason")
        statusSeverity = jsonDictionary.json(atKeyPath: "statusSeverity")
        statusSeverityDescription = jsonDictionary.json(atKeyPath: "statusSeverityDescription")
        validityPeriods = jsonDictionary.json(atKeyPath: "validityPeriods")
    }

    public func encode() -> JSONDictionary {
        var dictionary: JSONDictionary = [:]
        if let created = created?.encode() {
            dictionary["created"] = created
        }
        if let disruption = disruption?.encode() {
            dictionary["disruption"] = disruption
        }
        if let id = id {
            dictionary["id"] = id
        }
        if let lineId = lineId {
            dictionary["lineId"] = lineId
        }
        if let modified = modified?.encode() {
            dictionary["modified"] = modified
        }
        if let reason = reason {
            dictionary["reason"] = reason
        }
        if let statusSeverity = statusSeverity {
            dictionary["statusSeverity"] = statusSeverity
        }
        if let statusSeverityDescription = statusSeverityDescription {
            dictionary["statusSeverityDescription"] = statusSeverityDescription
        }
        if let validityPeriods = validityPeriods?.encode() {
            dictionary["validityPeriods"] = validityPeriods
        }
        return dictionary
    }

    /// pretty prints all properties including nested models
    public var prettyPrinted: String {
        return "\(type(of: self)):\n\(encode().recursivePrint(indentIndex: 1))"
    }
}

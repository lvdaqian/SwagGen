//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import JSONUtilities

public class TimeAdjustment: JSONDecodable, JSONEncodable, PrettyPrintable {

    public var date: String?

    public var time: String?

    public var timeIs: String?

    public var uri: String?

    public init(date: String? = nil, time: String? = nil, timeIs: String? = nil, uri: String? = nil) {
        self.date = date
        self.time = time
        self.timeIs = timeIs
        self.uri = uri
    }

    public required init(jsonDictionary: JSONDictionary) throws {
        date = jsonDictionary.json(atKeyPath: "date")
        time = jsonDictionary.json(atKeyPath: "time")
        timeIs = jsonDictionary.json(atKeyPath: "timeIs")
        uri = jsonDictionary.json(atKeyPath: "uri")
    }

    public func encode() -> JSONDictionary {
        var dictionary: JSONDictionary = [:]
        if let date = date {
            dictionary["date"] = date
        }
        if let time = time {
            dictionary["time"] = time
        }
        if let timeIs = timeIs {
            dictionary["timeIs"] = timeIs
        }
        if let uri = uri {
            dictionary["uri"] = uri
        }
        return dictionary
    }

    /// pretty prints all properties including nested models
    public var prettyPrinted: String {
        return "\(type(of: self)):\n\(encode().recursivePrint(indentIndex: 1))"
    }
}

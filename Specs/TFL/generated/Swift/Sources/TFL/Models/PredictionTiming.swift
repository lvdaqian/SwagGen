//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import JSONUtilities

public class PredictionTiming: JSONDecodable, JSONEncodable, PrettyPrintable {

    public var countdownServerAdjustment: String?

    public var insert: Date?

    public var read: Date?

    public var received: Date?

    public var sent: Date?

    public var source: Date?

    public init(countdownServerAdjustment: String? = nil, insert: Date? = nil, read: Date? = nil, received: Date? = nil, sent: Date? = nil, source: Date? = nil) {
        self.countdownServerAdjustment = countdownServerAdjustment
        self.insert = insert
        self.read = read
        self.received = received
        self.sent = sent
        self.source = source
    }

    public required init(jsonDictionary: JSONDictionary) throws {
        countdownServerAdjustment = jsonDictionary.json(atKeyPath: "countdownServerAdjustment")
        insert = jsonDictionary.json(atKeyPath: "insert")
        read = jsonDictionary.json(atKeyPath: "read")
        received = jsonDictionary.json(atKeyPath: "received")
        sent = jsonDictionary.json(atKeyPath: "sent")
        source = jsonDictionary.json(atKeyPath: "source")
    }

    public func encode() -> JSONDictionary {
        var dictionary: JSONDictionary = [:]
        if let countdownServerAdjustment = countdownServerAdjustment {
            dictionary["countdownServerAdjustment"] = countdownServerAdjustment
        }
        if let insert = insert?.encode() {
            dictionary["insert"] = insert
        }
        if let read = read?.encode() {
            dictionary["read"] = read
        }
        if let received = received?.encode() {
            dictionary["received"] = received
        }
        if let sent = sent?.encode() {
            dictionary["sent"] = sent
        }
        if let source = source?.encode() {
            dictionary["source"] = source
        }
        return dictionary
    }

    /// pretty prints all properties including nested models
    public var prettyPrinted: String {
        return "\(type(of: self)):\n\(encode().recursivePrint(indentIndex: 1))"
    }
}

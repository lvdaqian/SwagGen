//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import JSONUtilities

public class Line: JSONDecodable, JSONEncodable, PrettyPrintable {

    public var created: Date?

    public var crowding: Crowding?

    public var disruptions: [Disruption]?

    public var id: String?

    public var lineStatuses: [LineStatus]?

    public var modeName: String?

    public var modified: Date?

    public var name: String?

    public var routeSections: [MatchedRoute]?

    public var serviceTypes: [LineServiceTypeInfo]?

    public init(created: Date? = nil, crowding: Crowding? = nil, disruptions: [Disruption]? = nil, id: String? = nil, lineStatuses: [LineStatus]? = nil, modeName: String? = nil, modified: Date? = nil, name: String? = nil, routeSections: [MatchedRoute]? = nil, serviceTypes: [LineServiceTypeInfo]? = nil) {
        self.created = created
        self.crowding = crowding
        self.disruptions = disruptions
        self.id = id
        self.lineStatuses = lineStatuses
        self.modeName = modeName
        self.modified = modified
        self.name = name
        self.routeSections = routeSections
        self.serviceTypes = serviceTypes
    }

    public required init(jsonDictionary: JSONDictionary) throws {
        created = jsonDictionary.json(atKeyPath: "created")
        crowding = jsonDictionary.json(atKeyPath: "crowding")
        disruptions = jsonDictionary.json(atKeyPath: "disruptions")
        id = jsonDictionary.json(atKeyPath: "id")
        lineStatuses = jsonDictionary.json(atKeyPath: "lineStatuses")
        modeName = jsonDictionary.json(atKeyPath: "modeName")
        modified = jsonDictionary.json(atKeyPath: "modified")
        name = jsonDictionary.json(atKeyPath: "name")
        routeSections = jsonDictionary.json(atKeyPath: "routeSections")
        serviceTypes = jsonDictionary.json(atKeyPath: "serviceTypes")
    }

    public func encode() -> JSONDictionary {
        var dictionary: JSONDictionary = [:]
        if let created = created?.encode() {
            dictionary["created"] = created
        }
        if let crowding = crowding?.encode() {
            dictionary["crowding"] = crowding
        }
        if let disruptions = disruptions?.encode() {
            dictionary["disruptions"] = disruptions
        }
        if let id = id {
            dictionary["id"] = id
        }
        if let lineStatuses = lineStatuses?.encode() {
            dictionary["lineStatuses"] = lineStatuses
        }
        if let modeName = modeName {
            dictionary["modeName"] = modeName
        }
        if let modified = modified?.encode() {
            dictionary["modified"] = modified
        }
        if let name = name {
            dictionary["name"] = name
        }
        if let routeSections = routeSections?.encode() {
            dictionary["routeSections"] = routeSections
        }
        if let serviceTypes = serviceTypes?.encode() {
            dictionary["serviceTypes"] = serviceTypes
        }
        return dictionary
    }

    /// pretty prints all properties including nested models
    public var prettyPrinted: String {
        return "\(type(of: self)):\n\(encode().recursivePrint(indentIndex: 1))"
    }
}

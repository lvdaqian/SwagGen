//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import JSONUtilities

public class GeoCodeSearchMatch: JSONDecodable, JSONEncodable, PrettyPrintable {

    /** A string describing the formatted address of the place. Adds additional context to the place's Name. */
    public var address: String?

    public var id: String?

    public var lat: Double?

    public var lon: Double?

    public var name: String?

    /** The type of the place e.g. "street_address" */
    public var types: [String]?

    public var url: String?

    public init(address: String? = nil, id: String? = nil, lat: Double? = nil, lon: Double? = nil, name: String? = nil, types: [String]? = nil, url: String? = nil) {
        self.address = address
        self.id = id
        self.lat = lat
        self.lon = lon
        self.name = name
        self.types = types
        self.url = url
    }

    public required init(jsonDictionary: JSONDictionary) throws {
        address = jsonDictionary.json(atKeyPath: "address")
        id = jsonDictionary.json(atKeyPath: "id")
        lat = jsonDictionary.json(atKeyPath: "lat")
        lon = jsonDictionary.json(atKeyPath: "lon")
        name = jsonDictionary.json(atKeyPath: "name")
        types = jsonDictionary.json(atKeyPath: "types")
        url = jsonDictionary.json(atKeyPath: "url")
    }

    public func encode() -> JSONDictionary {
        var dictionary: JSONDictionary = [:]
        if let address = address {
            dictionary["address"] = address
        }
        if let id = id {
            dictionary["id"] = id
        }
        if let lat = lat {
            dictionary["lat"] = lat
        }
        if let lon = lon {
            dictionary["lon"] = lon
        }
        if let name = name {
            dictionary["name"] = name
        }
        if let types = types {
            dictionary["types"] = types
        }
        if let url = url {
            dictionary["url"] = url
        }
        return dictionary
    }

    /// pretty prints all properties including nested models
    public var prettyPrinted: String {
        return "\(type(of: self)):\n\(encode().recursivePrint(indentIndex: 1))"
    }
}
